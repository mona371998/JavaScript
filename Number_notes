/*Notes:
1. JavaScript Numbers are Always 64-bit Floating Point
2. JavaScript does not define different types of numbers, like integers, short, long, floating-point etc.
3. Extra large or extra small numbers can be written with scientific (exponent) notation
Example: let x = 123e5;    // 12300000
         let y = 123e-5;   // 0.00123
Floating point arithmetic is not always 100% accurate:
                     eg: let x = 0.2 + 0.1;
4. WARNING !!
JavaScript uses the + operator for both addition and concatenation.
Numbers are added. Strings are concatenated.

5. Watch out for NaN. If you use NaN in a mathematical operation, the result will also be NaN:
Example: let x = NaN;
         let y = 5;
         let z = x + y;// NaN
 Example:let x = NaN;
         let y = "5";
         let z = x + y;//NaN5
 note:NaN is a number: typeof NaN returns number
 6.Infinity (or -Infinity) is the value JavaScript will return if you calculate a number outside the largest possible number.
 Example: let myNumber = 2;
          // Execute until Infinity
          while (myNumber != Infinity) {
          myNumber = myNumber * myNumber;}
          outPut:4
                 16
                 256
                 65536
                 4294967296
                 18446744073709552000
                 3.402823669209385e+38
                 1.157920892373162e+77
                 1.3407807929942597e+154
                 Infinity
 Note:Division by 0 (zero) also generates Infinity
       Example:let x =  2 / 0;//Infinity
               let y = -2 / 0;//-Infinity 
  Note:Infinity is a number: typeof Infinity returns number
  
  Number Methods:
  toString() method - converts a number to a string.
  toExponential() - returns a string, with a number rounded and written using exponential notation
  toFixed() - returns a string, with the number written with a specified number of decimals
   Example: let x = 9.656;
            x.toFixed(0) // 10
            x.toFixed(2) //9.66
            x.toFixed(4) //9.6560
  toPrecision() - returns a string, with a number written with a specified length
  Example: let x = 9.656;
            x.toPrecision();// 9.656
            x.toPrecision(2);//9.7
   valueOf() - returns a number as a number.         
  ## Converting Variables to Numbers
   The Number() method-Returns a number, converted from its argument.
   Example: var a="99 88 77";
             var num=Number(a)
             document.write(num)//100
   The parseInt() method- Parses its argument and returns a floating point number
   Example: var a="99";
             var num=parseInt(a)
             document.write(1+num)//99
   The parseFloat() method - Parses its argument and returns an integer but it will return decimal value also.
    Example: var a="99.12";
             var num=parseInt(a)
             document.write(num)//99.12
  
  Note: These methods are not number methods, but global JavaScript methods.
  method to check the condition(return true or false)
  isfinite()//it is finite or not
      Example: var a="99.12";
             var num=Number.isfinitet(a)
             document.write(num)//true
  isinteger()//it is integer or not
   Example: var a="99.12";
             var num=Number.isinteger(a)
             document.write(num)//true
